"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const collect_1=require("@wonderlandlabs/collect"),walrus_1=require("@wonderlandlabs/walrus"),Leaf_1=__importDefault(require("./Leaf")),Forest_1=__importDefault(require("./Forest")),ForestItem_1=__importDefault(require("./ForestItem")),constants_1=require("./constants"),helpers_1=require("./helpers");class Branch extends ForestItem_1.default{constructor(e,t){super(e.name,e.$value,t),this.config=e,this.forest=t,this.leaves=new Map,this.children=new Map,this.do={},this.registerInForest(),this._initLeaves(),this._initChildren(),"function"==typeof e.test&&(this.test=e.test),this._initDo()}_initLeaves(){this.config.leaves&&(0,collect_1.c)(this.config.leaves).forEach((e,t)=>{this.addLeaf(e,t)})}addLeaf(e,t){e=new Leaf_1.default(this,e,t);this.leaves.set(t,e)}get(e){return(0,collect_1.c)(this.value).get(e)}set(e,t){var s,i=(0,collect_1.c)(this.value).clone();if(i.family!==walrus_1.FormEnum.container)throw new Error("cannot set "+e+" to non-container");this.hasChild(e)?(s=this.child(e))&&(s.value=t):(i.set(e,t),this.value=i.value)}static create(e,t){return(new Forest_1.default).createBranch(e,t)}pushTempValue(e,t,s){var i=(0,collect_1.c)(e).clone();if(i.family===walrus_1.FormEnum.container&&this.children.size)for(var[r,a]of this.children)i.hasKey(r)&&s!==constants_1.UpdateDir.down?a.pushTempValue(i.get(r),t,constants_1.UpdateDir.up):i.set(r,a.value);super.pushTempValue(i.value,t),this.parent&&s!==constants_1.UpdateDir.up&&this.parent.pushTempValue(this.parent.value,t,constants_1.UpdateDir.down)}validate(e){var t=this.value;if(walrus_1.type.describe(t,!0)!==walrus_1.type.describe(this.committedValue,!0))throw new Error("Cannot change type of Branch");e!==constants_1.UpdateDir.down&&(this.children.forEach(e=>{e.validate(constants_1.UpdateDir.up)}),this.leaves.forEach(e=>e.validate())),super.validate(),this.parent&&e!==constants_1.UpdateDir.up&&this.parent.validate(constants_1.UpdateDir.down)}_initChildren(){(0,helpers_1.isChildConfigs)(this.config.children)&&this.addChildren(this.config.children)}child(e){return this.children.get(e)}addChild(e,t){var e=Object.assign(Object.assign({},e),{name:t,parent:this});if((0,helpers_1.isBranchConfig)(e))return e=new Branch(e,this.forest),this.children.set(t,e),e;throw new Error("cannot create branch "+t)}addChildren(e){(0,collect_1.c)(e).forEach((e,t)=>{this.addChild(e,t)})}hasChild(e){return this.children.has(e)}_initDo(){this.do={},this.config.actions&&(0,collect_1.c)(this.config.actions).forEach((t,s)=>{this.do[s]=(...e)=>{this.forest.trans(s,()=>{t(this,...e)})}})}}exports.default=Branch;