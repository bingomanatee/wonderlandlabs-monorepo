var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});let Branch_1=require("./Branch"),rxjs_1=require("rxjs"),utils_1=require("./utils"),Beaver_1=__importDefault(require("./Tree/Beaver")),PreValidator_1=require("./Tree/PreValidator"),BenchMarker_1=__importDefault(require("./Tree/BenchMarker"));class Tree{constructor(t,e,r){this.forest=t,this.name=e,(this.params=r)&&"initial"in r&&void 0!==(t=r.initial)&&(this.root=new Branch_1.Branch(this,{assert:t,name:"initial"}),this.top=this.root),this.stream=new rxjs_1.BehaviorSubject(this.top)}get isUncacheable(){return!!this.params&&Boolean(this.params.uncacheable)}next(t,e="(next)"){this.grow({assert:t,name:e})}rollback(e,r){if(this.top&&!(this.top.time<e)){let t=this.top;for(;t.prev&&t.prev.time>=e;)t=t.prev;r={time:e,error:r,branch:t},this.offshoots||(this.offshoots=[]),this.offshoots.push(r),r=t.prev,(this.top=r)?r.next=void 0:(this.root=void 0,this.top=void 0)}}mutate(t,e,r){r?this.grow({mutator:t,seed:e,name:r}):t.name?this.grow({mutator:t,seed:e,name:t.name}):this.grow({mutator:t,seed:e,name:"(mutation)"})}grow(e){return this.forest.do(()=>{var t;if(this.params?.validator&&PreValidator_1.PreValidator.validate(e,this),!this.params?.benchmarkInterval||!BenchMarker_1.default.shouldBenchmark(this,e))return t=new Branch_1.Branch(this,e),this.top?this.top.linkTo(t):this.root=t,this.top=t,new Beaver_1.default(this).limitBranchLength(),this.stream.next(this.top),this.top;new BenchMarker_1.default(this).benchmark(e)})}validate(t){if(!this.params?.validator)return{isValid:!0,value:t,tree:this.name};try{var e=this.params.validator(t,this);return e?{isValid:!1,value:t,tree:this.name,error:e.message}:{isValid:!0,value:t,tree:this.name}}catch(e){var r=e instanceof Error?e.message:"string"==typeof e?e:""+e;return{value:t,tree:this.name,isValid:!1,error:r}}}get subject(){return this.stream.pipe((0,rxjs_1.filter)(t=>!!t),(0,rxjs_1.map)(t=>t.value))}subscribe(t){return this.subject.subscribe(t)}valueAt(e){if(this.top){let t=this.top;for(;t&&t.time>e;)t=t.prev;return t?t.value:void 0}}get value(){if(this.top)return this.top.value;throw new Error("cannot get the value from an empty tree")}addNote(t,e){this._notes||(this._notes=new Map),utils_1.NotableHelper.addNote(this.forest.time,this._notes,t,e,this.name)}hasNoteAt(t){return this._notes?.has(t)||!1}notes(t,e=0){return this._notes?utils_1.NotableHelper.notes(this._notes,t,e):[]}branchCount(t){if(!this.top)return 0;let e=0,r=this.top;for(;(!t||e<t)&&r;)e+=1,r=r.prev;return e}forEachDown(t,e=null){let r=this.top,i=0;for(;r&&!0!==t(r,i)&&(i+=1,r=r.prev,!(null!==e&&i>=e)););}forEachUp(t,e=null){let r=this.root,i=0;for(;r&&!0!==t(r,i)&&(i+=1,r=r.next,!(null!==e&&i>=e)););}}exports.default=Tree;