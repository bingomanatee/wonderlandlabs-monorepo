import { z } from 'zod';

// Nested object schemas
const AddressSchema = z.object({
  street: z.string().min(1),
  city: z.string().min(1),
  state: z.string().length(2),
  zipCode: z.string().regex(/^\d{5}(-\d{4})?$/)
});

const ContactSchema = z.object({
  phone: z.string().regex(/^\+?[\d\s\-\(\)]+$/),
  email: z.string().email(),
  preferred: z.enum(['phone', 'email'])
});

const CustomerSchema = z.object({
  id: z.string().uuid(),
  name: z.string().min(1).max(100),
  address: AddressSchema,
  contact: ContactSchema,
  orders: z.array(z.object({
    id: z.string(),
    total: z.number().positive(),
    status: z.enum(['pending', 'shipped', 'delivered']),
    items: z.array(z.object({
      productId: z.string(),
      quantity: z.number().int().positive(),
      price: z.number().positive()
    }))
  })),
  createdAt: z.date(),
  lastOrderDate: z.date().optional()
});

type CustomerState = z.infer<typeof CustomerSchema>;
