import type { FieldIF } from '../collections/FormCollection/types.formCollection';
import { type Assertion, type IttermittentCacheProviderParams, type LocalValueProviderParams, type MutationValueProviderParams, type Mutator, type TruncationValueProviderParams } from './types.shared';
export declare function isObj(a: unknown): a is object;
export declare function isField(a: unknown): a is FieldIF;
export declare function isMutator<ValueType = unknown>(a: unknown): a is Mutator<ValueType>;
export declare function isAssert<ValueType = unknown>(a: unknown): a is Assertion<ValueType>;
export declare function isMapKey<MapType>(map: MapType, a: keyof any): a is keyof MapType;
export declare function isMutationValueProviderParams<Value>(a: unknown): a is MutationValueProviderParams<Value>;
export declare function isLocalValueProviderParams<Value>(a: unknown): a is LocalValueProviderParams<Value>;
export declare function isTruncationValueProviderParams<Value>(a: unknown): a is TruncationValueProviderParams<Value>;
export declare function isIttermittentCacheProviderParams<Value>(a: unknown): a is IttermittentCacheProviderParams<Value>;
