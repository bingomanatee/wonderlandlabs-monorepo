// Basic transaction usage
store.transact({
  suspendValidation: true,
  action() {
    // Multiple operations executed atomically
    this.$.updateUser(userId, newData)
    this.$.logActivity('user updated')
    this.$.sendNotification(userId)
  }
})

// Function-style transaction
store.transact((value) => {
  this.$.step1()
  this.$.step2()
  this.$.step3()
}, true) // suspendValidation = true

// Error handling with automatic rollback
try {
  store.transact({
    action() {
      this.$.operation1() // ✅ Success
      this.$.operation2() // ❌ Fails
      this.$.operation3() // Never executed
    }
  })
} catch (error) {
  // All changes automatically rolled back
  console.log('Transaction failed:', error.message)
}
