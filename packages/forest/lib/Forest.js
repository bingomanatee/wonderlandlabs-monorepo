Object.defineProperty(exports,"__esModule",{value:!0});let rxjs_1=require("rxjs"),Tree_1=require("./Tree"),types_1=require("./types"),helpers_1=require("./helpers"),ValidatorError_1=require("./ValidatorError");function isDataEngineFn(e){return"function"==typeof e}class Forest{constructor(e){this.errors=[],this.trees=new Map,this.engines=new Map,this._nextID=0,this.activeTransactionIds=new rxjs_1.BehaviorSubject(new Set),e.forEach(e=>{if((0,types_1.isDataEngineFactory)(e))this.engines.set(e.name,e.factory);else{if(!(0,types_1.isEngineIF)(e))throw new Error("strange engine");this.engines.set(e.name,e)}})}tree(e,r){if(!r){if(this.trees.has(e))return this.trees.get(e);throw new Error("cannot find tree "+e)}if(this.trees.has(e))throw new Error("cannot redefine tree "+e);r=new Tree_1.Tree(this,e,r);return this.trees.set(e,r),r}engine(e,r){if("string"==typeof e){if(!this.engines.has(e))throw new Error("cannot find engine "+e);var t=this.engines.get(e);if(isDataEngineFn(t)){if(r)return t(r);throw new Error("dataEngine(<string>, <tree>) requires a tree arg")}if((0,types_1.isEngineIF)(t))return t;throw new Error("strange engine for "+e)}if((0,types_1.isDataEngineFactory)(e)){if(r)return e.factory(r);throw new Error("dataEngine(<string>, <tree>) requires a tree arg")}if((0,types_1.isEngineIF)(e))return this.engines.set(e.name,e),e;throw new Error("strange arg to dataEngine")}get nextID(){return this._nextID+=1,this._nextID}changeActiveTransactionIDs(e){var r=new Set(this.activeTransactionIds.value),e=e(r);this.activeTransactionIds.next(e||r)}transact(t){let n=this.nextID;this.changeActiveTransactionIDs(e=>{e.add(n)});try{var i=t(n);return this.changeActiveTransactionIDs(e=>{e.delete(n)}),i}catch(e){t=e instanceof ValidatorError_1.ValidatorError?e.name:"transact error",i=e instanceof ValidatorError_1.ValidatorError?e.mutation:"transact error";let r=this.nextID;throw this.errors.push({id:r,validator:t,mutation:i,message:(0,helpers_1.errorMessage)(e)}),this.changeActiveTransactionIDs(e=>{e.delete(n)}),this.trees.forEach(e=>e.trim(n,r)),e}}}exports.default=Forest;