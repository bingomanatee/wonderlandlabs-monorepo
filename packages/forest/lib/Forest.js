Object.defineProperty(exports,"__esModule",{value:!0});let Tree_1=require("./Tree"),types_1=require("./types");class Forest{constructor(e){this.trees=new Map,this.engines=new Map,e.forEach(e=>this.dataEngine(e))}tree(e,t){if(!t){if(this.trees.has(e))return this.trees.get(e);throw new Error("cannot find tree "+e)}if(this.trees.has(e))throw new Error("cannot redefine tree "+e);t=new Tree_1.Tree(this,e,t);return this.trees.set(e,t),t}dataEngine(e,t){if("string"!=typeof e)return(0,types_1.isDataEngineFactory)(e)?(this.engines.set(e.name,e.factory),e.factory(t)):(this.engines.set((r=e).name,r),r);if(!this.engines.has(e))throw new Error("cannot find engine "+e);var r=this.engines.get(e);if("function"!=typeof r)return r;if(t)return r(t);throw new Error("dataEngine(<string>, <tree>) requires a tree arg")}}exports.default=Forest;