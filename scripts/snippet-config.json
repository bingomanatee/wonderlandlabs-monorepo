{
  "snippets": [
    {
      "name": "demoStoreFactory",
      "description": "Demo store factory for LiveDemo component with universal input handlers",
      "source": "apps/forestry4-docs/src/storeFactories/demoStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/demoStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "useForestryLocal-hook",
      "description": "useForestryLocal hook implementation for React integration",
      "source": "apps/forestry4-docs/src/hooks/useForestryLocal.ts",
      "target": "apps/forestry4-docs/public/snippets/useForestryLocal.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "useErrorHandler-hook",
      "description": "useErrorHandler hook for toast-based error handling",
      "source": "apps/forestry4-docs/src/hooks/useErrorHandler.ts",
      "target": "apps/forestry4-docs/public/snippets/useErrorHandler.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "createTodoStore",
      "description": "Todo store factory from createTodoStore",
      "source": "apps/forestry4-docs/src/storeFactories/createTodoStore.ts",
      "target": "apps/forestry4-docs/public/snippets/createTodoStore.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "transactionDemoStoreFactory",
      "description": "Transaction demo store factory with bank, order, and migration examples",
      "source": "apps/forestry4-docs/src/storeFactories/transactionDemoStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/transactionDemoStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "TodoApp-page",
      "description": "TodoApp example page component",
      "source": "apps/forestry4-docs/src/pages/examples/TodoApp.tsx",
      "target": "apps/forestry4-docs/public/snippets/TodoApp-page.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "LiveDemo-component",
      "description": "LiveDemo component showing universal input handlers",
      "source": "apps/forestry4-docs/src/components/WhyForestry/LiveDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/LiveDemo.tsx",
      "extractMode": "function",
      "functionName": "LiveDemo",
      "language": "typescript"
    },
    {
      "name": "universal-input-handler",
      "description": "Universal input handler with type detection",
      "source": "apps/forestry4-docs/src/storeFactories/demoStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/universal-input-handler.ts",
      "extractMode": "section",
      "startMarker": "handleInputChange: function",
      "endMarker": "      },",
      "language": "typescript"
    },
    {
      "name": "counterStoreFactory",
      "description": "Counter store factory example",
      "source": "apps/forestry4-docs/src/storeFactories/counterStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/counterStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "userProfileFactory",
      "description": "User profile store factory",
      "source": "apps/forestry4-docs/src/storeFactories/userProfileFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/userProfileFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "UserProfileDemo-component",
      "description": "Interactive user profile demo component with form validation",
      "source": "apps/forestry4-docs/src/components/examples/UserProfileDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/UserProfileDemo-component.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "ShoppingCart-page",
      "description": "Shopping cart example page",
      "source": "apps/forestry4-docs/src/pages/examples/ShoppingCart.tsx",
      "target": "apps/forestry4-docs/public/snippets/ShoppingCart-page.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "FormValidation-page",
      "description": "Form validation example page",
      "source": "apps/forestry4-docs/src/pages/examples/FormValidation.tsx",
      "target": "apps/forestry4-docs/public/snippets/FormValidation-page.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "TransactionDemo-page",
      "description": "Transaction demo example page",
      "source": "apps/forestry4-docs/src/pages/examples/TransactionDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/TransactionDemo-page.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "TransactionDemo-component",
      "description": "Interactive transaction demo component with bank transfers and data migration",
      "source": "apps/forestry4-docs/src/components/examples/TransactionDemoComponent.tsx",
      "target": "apps/forestry4-docs/public/snippets/TransactionDemo-component.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "demoStoreFactory-tests",
      "description": "Complete test suite for demoStoreFactory",
      "source": "apps/forestry4-docs/src/storeFactories/__tests__/demoStoreFactory.test.ts",
      "target": "apps/forestry4-docs/public/snippets/demoStoreFactory-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "InteractiveDemo",
      "description": "Interactive demo component showing Forestry in action",
      "source": "apps/forestry4-docs/src/components/WhyForestry/InteractiveDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/InteractiveDemo.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "counter-example",
      "description": "Counter store example showing action parameters",
      "source": "apps/forestry4-docs/public/snippets/actions-state/counter-example.ts",
      "target": "apps/forestry4-docs/public/snippets/actions-state/counter-example.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "set-examples",
      "description": "Examples of using the set method for state updates",
      "source": "apps/forestry4-docs/public/snippets/actions-state/set-examples.ts",
      "target": "apps/forestry4-docs/public/snippets/actions-state/set-examples.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "mutate-examples",
      "description": "Examples of using the mutate method with Immer",
      "source": "apps/forestry4-docs/public/snippets/actions-state/mutate-examples.ts",
      "target": "apps/forestry4-docs/public/snippets/actions-state/mutate-examples.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "next-examples",
      "description": "Examples of using the next method for complete state replacement",
      "source": "apps/forestry4-docs/public/snippets/actions-state/next-examples.ts",
      "target": "apps/forestry4-docs/public/snippets/actions-state/next-examples.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "arrow-function-antipattern",
      "description": "Example showing why arrow functions don't work as actions",
      "source": "apps/forestry4-docs/public/snippets/actions-state/arrow-function-antipattern.ts",
      "target": "apps/forestry4-docs/public/snippets/actions-state/arrow-function-antipattern.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "home-installation",
      "description": "Installation instructions for Forestry 4",
      "source": "apps/forestry4-docs/public/snippets/home/installation.sh",
      "target": "apps/forestry4-docs/public/snippets/home/installation.sh",
      "extractMode": "full",
      "language": "bash"
    },
    {
      "name": "home-basic-usage",
      "description": "Basic usage example for Forestry 4",
      "source": "apps/forestry4-docs/src/examples/home/basic-usage.ts",
      "target": "apps/forestry4-docs/public/snippets/home/basic-usage.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "home-react-integration",
      "description": "React integration example for Forestry 4",
      "source": "apps/forestry4-docs/src/examples/home/react-integration.tsx",
      "target": "apps/forestry4-docs/public/snippets/home/react-integration.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "home-demo-store-definition",
      "description": "Demo store definition for home page live demo",
      "source": "apps/forestry4-docs/src/storeFactories/homeDemoStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/home/demo-store-definition.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "home-demo-react-integration",
      "description": "Demo React integration for home page live demo",
      "source": "apps/forestry4-docs/public/snippets/home/demo-react-integration.tsx",
      "target": "apps/forestry4-docs/public/snippets/home/demo-react-integration.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "home-demo-jsx-template",
      "description": "Complete React component demo for home page",
      "source": "apps/forestry4-docs/src/components/examples/CompleteCounterDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/home/demo-jsx-template.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "counter-example-tests",
      "description": "Basic counter example unit tests",
      "source": "apps/forestry4-docs/src/__tests__/counter-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/counter-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "advanced-counter-example-tests",
      "description": "Advanced counter with history unit tests",
      "source": "apps/forestry4-docs/src/__tests__/advanced-counter-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/advanced-counter-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "user-profile-example-tests",
      "description": "User profile store example unit tests",
      "source": "apps/forestry4-docs/src/__tests__/user-profile-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/user-profile-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-example-tests",
      "description": "Shopping cart store example unit tests",
      "source": "apps/forestry4-docs/src/__tests__/shopping-cart-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-component-usage",
      "description": "Shopping cart component usage with error handling",
      "source": "apps/forestry4-docs/src/examples/shopping-cart/component-usage.tsx",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-component-usage.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-global-toast-setup",
      "description": "Global toast configuration for shopping cart error handling",
      "source": "apps/forestry4-docs/src/examples/shopping-cart/global-toast-setup.tsx",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-global-toast-setup.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-demo-component",
      "description": "Complete shopping cart demo component with validation and error handling",
      "source": "apps/forestry4-docs/src/examples/shopping-cart/ShoppingCartDemoComponent.tsx",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-demo-component.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-schema-validation",
      "description": "Zod schema definitions and custom business logic tests for shopping cart validation",
      "source": "apps/forestry4-docs/src/examples/shopping-cart/schema-validation.ts",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-schema-validation.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shopping-cart-store-actions",
      "description": "Shopping cart store actions with validation and transaction handling",
      "source": "apps/forestry4-docs/src/examples/shopping-cart/store-actions.ts",
      "target": "apps/forestry4-docs/public/snippets/shopping-cart-store-actions.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "field-branch-component",
      "description": "Reusable Field component demonstrating Forest branch usage with validation",
      "source": "apps/forestry4-docs/src/components/ValidationSystem/Field.tsx",
      "target": "apps/forestry4-docs/public/snippets/field-branch-component.tsx",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "advancedFormComponent",
      "description": "Advanced form component demonstrating field-level validation with Forest branches",
      "source": "apps/forestry4-docs/src/components/ValidationSystem/AdvancedFormDemo.tsx",
      "target": "apps/forestry4-docs/public/snippets/ValidationSystem/advancedFormComponent.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "usernameBranchConfig",
      "description": "Username field branch configuration with validation rules",
      "source": "apps/forestry4-docs/src/storeFactories/ValidationSystem/form/usernameBranch.ts",
      "target": "apps/forestry4-docs/public/snippets/ValidationSystem/usernameBranchConfig.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "formStateFactory",
      "description": "Form state factory with branch coordination and validation",
      "source": "apps/forestry4-docs/src/storeFactories/ValidationSystem/form/formState.ts",
      "target": "apps/forestry4-docs/public/snippets/ValidationSystem/formStateFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "username-branch-example-tests",
      "description": "Username branch validation example unit tests",
      "source": "apps/forestry4-docs/src/__tests__/username-branch-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/username-branch-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "transaction-demo-example-tests",
      "description": "Transaction demo example unit tests covering bank, order, and migration stores",
      "source": "apps/forestry4-docs/src/__tests__/transaction-demo-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/transaction-demo-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "basicTransactionSyntax",
      "description": "Basic transaction syntax examples with validation suspension",
      "source": "apps/forestry4-docs/src/examples/transactions/basicTransactionSyntax.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/basicTransactionSyntax.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "errorHandlingRollback",
      "description": "Transaction error handling and automatic rollback examples",
      "source": "apps/forestry4-docs/src/examples/transactions/errorHandlingRollback.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/errorHandlingRollback.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "suspendValidationExample",
      "description": "Examples showing validation suspension during transactions",
      "source": "apps/forestry4-docs/src/examples/transactions/suspendValidationExample.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/suspendValidationExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "actionFunctionExample",
      "description": "Transaction action function examples with complex logic",
      "source": "apps/forestry4-docs/src/examples/transactions/actionFunctionExample.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/actionFunctionExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "transactionDebugging",
      "description": "Transaction debugging with stack observation",
      "source": "apps/forestry4-docs/src/examples/transactions/transactionDebugging.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/transactionDebugging.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "nestedTransactionExample",
      "description": "Nested transaction example with error handling",
      "source": "apps/forestry4-docs/src/examples/transactions/nestedTransactionExample.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/nestedTransactionExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "validationErrorExample",
      "description": "Validation error example with suspendValidation",
      "source": "apps/forestry4-docs/src/examples/transactions/validationErrorExample.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/validationErrorExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "transactionErrorCheck",
      "description": "Transaction error checking and rollback verification",
      "source": "apps/forestry4-docs/src/examples/transactions/transactionErrorCheck.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/transactionErrorCheck.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "transactMethodExamples",
      "description": "Transaction method examples with nested transactions and error handling",
      "source": "apps/forestry4-docs/src/examples/transactions/transactMethodExamples.ts",
      "target": "apps/forestry4-docs/public/snippets/Transactions/transactMethodExamples.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "nextExample",
      "description": "Forest next() method examples for updating values",
      "source": "apps/forestry4-docs/src/examples/api-reference/nextExample.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/nextExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "subscribeExample",
      "description": "Forest subscribe() method examples for listening to changes",
      "source": "apps/forestry4-docs/src/examples/api-reference/subscribeExample.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/subscribeExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "getPathExample",
      "description": "Forest get() method examples for retrieving values by path",
      "source": "apps/forestry4-docs/src/examples/api-reference/getPathExample.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/getPathExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "setValueExample",
      "description": "Forest set() method examples for updating values by path",
      "source": "apps/forestry4-docs/src/examples/api-reference/setValueExample.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/setValueExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "branchCreationExample",
      "description": "Forest branch() method examples for creating branches with actions",
      "source": "apps/forestry4-docs/src/examples/api-reference/branchCreationExample.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/branchCreationExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "validateMethod",
      "description": "Forest validate() method examples with schema and test validation",
      "source": "apps/forestry4-docs/src/examples/api-reference/validateMethod.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/validateMethod.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "testMethod",
      "description": "Forest test() method examples ignoring transaction suspension",
      "source": "apps/forestry4-docs/src/examples/api-reference/testMethod.ts",
      "target": "apps/forestry4-docs/public/snippets/APIReference/testMethod.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "zodSchemaValidation",
      "description": "Zod schema validation with Forestry stores",
      "source": "apps/forestry4-docs/src/examples/schema-validation/zodSchemaValidation.ts",
      "target": "apps/forestry4-docs/public/snippets/ActionsState/zodSchemaValidation.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "schemaPrepIntegration",
      "description": "Schema prep integration with custom validation logic",
      "source": "apps/forestry4-docs/src/examples/schema-validation/schemaPrepIntegration.ts",
      "target": "apps/forestry4-docs/public/snippets/SchemaValidation/schemaPrepIntegration.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "basicTypes",
      "description": "Basic Zod schema types and validation patterns",
      "source": "apps/forestry4-docs/src/examples/schema-validation/basicTypes.ts",
      "target": "apps/forestry4-docs/public/snippets/SchemaValidation/basicTypes.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "complexObjects",
      "description": "Complex nested object schemas with validation",
      "source": "apps/forestry4-docs/src/examples/schema-validation/complexObjects.ts",
      "target": "apps/forestry4-docs/public/snippets/SchemaValidation/complexObjects.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "arraysValidation",
      "description": "Array validation patterns with Zod schemas",
      "source": "apps/forestry4-docs/src/examples/schema-validation/arraysValidation.ts",
      "target": "apps/forestry4-docs/public/snippets/SchemaValidation/arraysValidation.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "conditionalLogic",
      "description": "Conditional validation logic and discriminated unions",
      "source": "apps/forestry4-docs/src/examples/schema-validation/conditionalLogic.ts",
      "target": "apps/forestry4-docs/public/snippets/SchemaValidation/conditionalLogic.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "shoppingCartValidation",
      "description": "Complete shopping cart validation example with all three layers: Zod schema, test functions, and prep function",
      "source": "apps/forestry4-docs/src/examples/validation-system/shoppingCartValidation.ts",
      "target": "apps/forestry4-docs/public/snippets/ValidationSystem/shoppingCartValidation.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "formValidationStoreFactory",
      "description": "Advanced form validation store with Zod schema, async validation, and error handling",
      "source": "apps/forestry4-docs/src/storeFactories/formValidationStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/formValidationStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "form-validation-example-tests",
      "description": "Form validation example unit tests covering field validation, async validation, and form submission",
      "source": "apps/forestry4-docs/src/__tests__/form-validation-example.test.ts",
      "target": "apps/forestry4-docs/public/snippets/form-validation-example-tests.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "UserRegistrationSchema",
      "description": "Comprehensive Zod schema for user registration form with complex validation rules",
      "source": "apps/forestry4-docs/src/examples/form-validation/UserRegistrationSchema.ts",
      "target": "apps/forestry4-docs/public/snippets/UserRegistrationSchema.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "formValidationStoreFactory",
      "description": "Advanced form validation store with Zod schema, field validation, and error handling",
      "source": "apps/forestry4-docs/src/storeFactories/formValidationStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/formValidationStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "todoAppStoreFactory",
      "description": "Todo app store with filtering, editing, persistence, and comprehensive todo management",
      "source": "apps/forestry4-docs/src/storeFactories/createTodoStore.ts",
      "target": "apps/forestry4-docs/public/snippets/todoAppStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },  {
      "name": "todoAppDemo",
      "description": "todo component",
      "source": "apps/forestry4-docs/src/pages/examples/TodoApp.tsx",
      "target": "apps/forestry4-docs/public/snippets/TodoApp.tsx",
      "extractMode": "full",
      "language": "typescript"
    },


    {
      "name": "shoppingCartStoreFactory",
      "description": "Shopping cart store with validation, coupons, tax calculation, and checkout processing",
      "source": "apps/forestry4-docs/src/storeFactories/ValidationSystem/shoppingCartStore.ts",
      "target": "apps/forestry4-docs/public/snippets/shoppingCartStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "codeTabsStoreFactory",
      "description": "Forest-based CodeTabs store factory for managing tabbed code snippets",
      "source": "apps/forestry4-docs/src/storeFactories/codeTabsStoreFactory.ts",
      "target": "apps/forestry4-docs/public/snippets/codeTabsStoreFactory.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "basicStore",
      "description": "Basic store example using modern Forestry 4.1.x class extension pattern",
      "source": "apps/forestry4-docs/src/examples/store-basics/basic-store.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/basicStore.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "storeWithValidation",
      "description": "Store with validation using modern Forestry 4.1.x pattern",
      "source": "apps/forestry4-docs/src/examples/store-basics/store-with-validation.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/storeWithValidation.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "reactHookPattern",
      "description": "React hook pattern with modern Forestry 4.1.x store",
      "source": "apps/forestry4-docs/src/examples/store-basics/react-hook-pattern.tsx",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/reactHookPattern.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "storeConstructorSignature",
      "description": "Modern Forestry 4.1.x constructor signature",
      "source": "apps/forestry4-docs/src/examples/store-basics/store-constructor-signature.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/storeConstructorSignature.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "nameExample",
      "description": "Store name configuration example",
      "source": "apps/forestry4-docs/src/examples/store-basics/name-example.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/nameExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "valueExample",
      "description": "Store value configuration example",
      "source": "apps/forestry4-docs/src/examples/store-basics/value-example.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/valueExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "actionsExample",
      "description": "Modern class methods example (replaces actions object)",
      "source": "apps/forestry4-docs/src/examples/store-basics/actions-example.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/actionsExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "testsExample",
      "description": "Validation tests configuration example",
      "source": "apps/forestry4-docs/src/examples/store-basics/tests-example.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/testsExample.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "formOnChangeHandler",
      "description": "Form onChange handler using modern Forestry 4.1.x pattern",
      "source": "apps/forestry4-docs/src/examples/store-basics/form-onchange-handler.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/formOnChangeHandler.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "singleFieldUpdates",
      "description": "Single field update patterns with modern class methods",
      "source": "apps/forestry4-docs/src/examples/store-basics/single-field-updates.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/singleFieldUpdates.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "multipleFieldUpdates",
      "description": "Multiple field update patterns with modern class methods",
      "source": "apps/forestry4-docs/src/examples/store-basics/multiple-field-updates.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/multipleFieldUpdates.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "complexUpdates",
      "description": "Complex update patterns using mutate() with Immer",
      "source": "apps/forestry4-docs/src/examples/store-basics/complex-updates.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/complexUpdates.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "validationPatterns",
      "description": "Validation patterns and test function examples",
      "source": "apps/forestry4-docs/src/examples/store-basics/validation-patterns.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/validationPatterns.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "liveExampleStoreDefinition",
      "description": "Complete store definition for live example demo",
      "source": "apps/forestry4-docs/src/examples/store-basics/live-example-store-definition.ts",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/liveExampleStoreDefinition.ts",
      "extractMode": "full",
      "language": "typescript"
    },
    {
      "name": "reactIntegration",
      "description": "React integration example for live demo",
      "source": "apps/forestry4-docs/src/examples/store-basics/react-integration.tsx",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/reactIntegration.tsx",
      "extractMode": "full",
      "language": "tsx"
    },
    {
      "name": "formComponent",
      "description": "Form component JSX example with store integration",
      "source": "apps/forestry4-docs/src/examples/store-basics/form-component.tsx",
      "target": "apps/forestry4-docs/public/snippets/StoreBasics/formComponent.tsx",
      "extractMode": "full",
      "language": "tsx"
    }
  ]
}
