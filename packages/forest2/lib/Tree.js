Object.defineProperty(exports,"__esModule",{value:!0});let Branch_1=require("./Branch");class Tree{constructor(t,r,o){this.forest=t,this.name=r,(this.params=o)&&"initial"in o&&(t=o["initial"],void 0!==t)&&(this.root=new Branch_1.Branch(this,{next:t}),this.top=this.root)}rollback(r,o){if(this.top&&!(this.top.time<r)){let t=this.top;for(;t.prev&&t.prev.time>=r;)t=t.prev;o={time:r,error:o,branch:t},o=(this.offshoots||(this.offshoots=[]),this.offshoots.push(o),t.prev);o?o.next=void 0:(this.root=void 0,this.top=void 0)}}grow(o){return this.forest.do(()=>{var t=new Branch_1.Branch(this,o);if(this.top?this.top.linkTo(t):this.root=t,this.top=t,this.params?.validator){var r=this.params.validator(t.value,this);if(r)throw r}return t})}get value(){if(this.top)return this.top.value;throw new Error("cannot get the value from an empty tree")}}exports.default=Tree;