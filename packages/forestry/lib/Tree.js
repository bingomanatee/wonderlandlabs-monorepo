var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});let Branch_1=require("./Branch"),types_shared_1=require("./types/types.shared"),rxjs_1=require("rxjs"),utils_1=require("./utils"),Beaver_1=__importDefault(require("./Tree/Beaver")),IttermittentCache_1=require("./Tree/IttermittentCache"),types_guards_1=require("./types/types.guards");class Tree{constructor(t,e,r){this.forest=t,this.name=e,(this.params=r)&&"initial"in r&&(t=r["initial"],void 0!==t)&&(this.root=new Branch_1.Branch(this,{assert:t,name:"initial"}),this.top=this.root),this.stream=new rxjs_1.BehaviorSubject(this.top)}get isUncacheable(){return!!this.params&&Boolean(this.params.uncacheable)}next(t,e="(next)"){this.grow({assert:t,name:e})}rollback(e,r){if(this.top&&!(this.top.time<e)){let t=this.top;for(;t.prev&&t.prev.time>=e;)t=t.prev;r={time:e,error:r,branch:t},r=(this.offshoots||(this.offshoots=[]),this.offshoots.push(r),t.prev);(this.top=r)?r.next=void 0:(this.root=void 0,this.top=void 0)}}mutate(t,e,r){r?this.grow({mutator:t,seed:e,name:r}):t.name?this.grow({mutator:t,seed:e,name:t.name}):this.grow({mutator:t,seed:e,name:"(mutation)"})}grow(e){return this.forest.do(()=>{if(this.params?.validator)if((0,types_guards_1.isAssert)(e)){var t=e.assert,t=this.validate(t);if(!t.isValid)throw new Error(t.error??"invalid value")}else if((0,types_guards_1.isMutator)(e)){t=this.top?.value??this.params?.initial,t=e.mutator({value:t,branch:this.top,seed:e.seed,tree:this,context:types_shared_1.ValueProviderContext.mutation}),t=this.validate(t);if(!t.isValid)throw new Error(t.error??"invalid value")}else console.warn("bad change: ",e);t=new Branch_1.Branch(this,e);return this.top?this.top.linkTo(t):this.root=t,this.top=t,IttermittentCache_1.IttermittentCache.benchmark(this),Beaver_1.default.limitSize(this),this.stream.next(this.top),this.top})}validate(r){if(!this.params?.validator)return{isValid:!0,value:r,tree:this.name};try{var t=this.params.validator(r,this);return t?{isValid:!1,value:r,tree:this.name,error:t.message}:{isValid:!0,value:r,tree:this.name}}catch(t){let e="";return e=t instanceof Error?t.message:"string"==typeof t?t:""+t,{value:r,tree:this.name,isValid:!1,error:e}}}get subject(){return this.stream.pipe((0,rxjs_1.filter)(t=>!!t),(0,rxjs_1.map)(t=>t.value))}subscribe(t){return this.subject.subscribe(t)}valueAt(e){if(this.top){let t=this.top;for(;t&&t.time>e;)t=t.prev;return t?t.value:void 0}}get value(){if(this.top)return this.top.value;throw new Error("cannot get the value from an empty tree")}addNote(t,e){this._notes||(this._notes=new Map),utils_1.NotableHelper.addNote(this.forest.time,this._notes,t,e,this.name)}hasNoteAt(t){return this._notes?.has(t)||!1}notes(t,e=0){return this._notes?utils_1.NotableHelper.notes(this._notes,t,e):[]}branchCount(t){if(!this.top)return 0;let e=0,r=this.top;for(;(!t||e<t)&&r;)e+=1,r=r.prev;return e}forEachDown(t,e=null){let r=this.top,s=0;for(;r;){if(!0===t(r,s))break;if(s+=1,r=r.prev,null!==e&&s>=e)break}}forEachUp(t,e=null){let r=this.root,s=0;for(;r;){if(!0===t(r,s))break;if(s+=1,r=r.prev,null!==e&&s>=e)break}}}exports.default=Tree;