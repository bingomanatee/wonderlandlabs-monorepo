Object.defineProperty(exports,"__esModule",{value:!0}),exports.Branch=void 0;let join_1=require("./join"),CACHE_UNSET=Symbol("CACHE_UNSET");class Branch{constructor(t,i,e,s){this.tree=t,this.action=i,this.data=e,this.options=s,this._cache=CACHE_UNSET,this.isAlive=!0}get value(){if(this.isAlive)return this.action.cacheable?(this._cache==CACHE_UNSET&&(this._cache=this.action.delta(this,this.data)),this._cache):this.action.delta(this,this.data,this.options);throw new Error("cannot get value from dead branch")}push(t){this.next?this.next.push(t):(0,join_1.join)(this,t)}popMe(){if(this.isAlive)return(0,join_1.join)(this.prev,this.next),this.prev=void 0,this.next=void 0,this.isAlive=!1,this;throw new Error("cannot pop a dead branch")}cutMe(){if(this.isAlive)return this.prev&&(this.prev.next=void 0,this.prev=void 0),this;throw new Error("cannot cut a dead branch")}destroy(){if(!this.isAlive)throw new Error("cannot destory a dead branch");this.popMe(),this._cache=CACHE_UNSET,this.tree=void 0}get isTop(){return!!this.isAlive&&!this.next}get isRoot(){return!!this.isAlive&&this===this.tree.root}}exports.Branch=Branch;