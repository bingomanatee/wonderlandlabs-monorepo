Object.defineProperty(exports,"__esModule",{value:!0}),exports.Branch=void 0;let enums_1=require("./enums"),Leaf_1=require("./Leaf"),helpers_1=require("./helpers"),constants_1=require("./constants"),isTreeSet_1=require("./helpers/isTreeSet"),isTreeDel_1=require("./helpers/isTreeDel");class Branch{constructor(e,t){this.tree=e,this.async=!1,this.cause=t.cause,this.status=enums_1.StatusEnum.good,this.data=this._initData(t),t.prev&&(this.prev=t.prev),this.id=e.forest.nextBranchId()}values(s){return s?this.data.forEach((e,t)=>{s.set(t,e)}):s=new Map(this.data),this.next?this.next.values(s):s}_initData(e){return e.data||new Map}leaf(e){return this.data.has(e)?this.leafFactory(e,this.data.get(e)):this.prev?this.prev.leaf(e):this.leafFactory(e,constants_1.NOT_FOUND)}get(e){return this.data.has(e)?this.data.get(e):this.prev?this.prev.get(e):void 0}leafFactory(e,t){return new Leaf_1.Leaf({treeName:this.tree.name,key:e,val:t,forest:this.tree.forest})}addBranch(e,t,s){if(this.next)throw new Error("cannot push on a non-terminal branch");e=new Branch(this.tree,{prev:this,data:(0,helpers_1.mp)(e,t),cause:s});return this.next=e}has(e){return!!this.data.has(e)||!!this.prev&&this.prev.has(e)}set(e,t){return this.next?this.next.set(e,t):(this.addBranch(e,t,enums_1.BranchActionEnum.set),this.next.get(e))}del(e){if(this.next)return this.next.del(e);this.addBranch(e,constants_1.DELETED,enums_1.ChangeTypeEnum.del)}change(e){if((0,isTreeSet_1.isTreeSet)(e))this.set(e.key,e.val);else{if(!(0,isTreeDel_1.isTreeDel)(e))throw new Error("cannot implement change "+e.type.toString());this.del(e.key)}return{treeName:e.treeName,change:e,status:enums_1.StatusEnum.good}}}exports.Branch=Branch;