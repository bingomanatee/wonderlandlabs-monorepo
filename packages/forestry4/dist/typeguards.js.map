{"version":3,"file":"typeguards.js","sources":["../src/typeguards.ts"],"sourcesContent":["import type { StoreIF } from './types';\n\nexport type ZodParser = {\n  parse: (a: unknown) => unknown;\n};\n\nexport function isObj(maybe: unknown): maybe is Record<string, unknown> {\n  return typeof maybe === 'object' && maybe !== null;\n}\n\nexport function isZodParser(maybe: unknown): maybe is ZodParser {\n  return isObj(maybe) && typeof (maybe as any).parse === 'function';\n}\n\nexport function isStore(maybe: unknown): maybe is StoreIF<unknown> {\n  return (\n    isObj(maybe) &&\n    'value' in maybe &&\n    typeof (maybe as any).next === 'function' &&\n    isObj(maybe?.acts) &&\n    isObj(maybe?.$)\n  );\n}\n"],"names":[],"mappings":"AAMO,SAAS,MAAM,OAAkD;AACtE,SAAO,OAAO,UAAU,YAAY,UAAU;AAChD;AAEO,SAAS,YAAY,OAAoC;AAC9D,SAAO,MAAM,KAAK,KAAK,OAAQ,MAAc,UAAU;AACzD;AAEO,SAAS,QAAQ,OAA2C;AACjE,SACE,MAAM,KAAK,KACX,WAAW,SACX,OAAQ,MAAc,SAAS,cAC/B,MAAM,OAAO,IAAI,KACjB,MAAM,OAAO,CAAC;AAElB;"}