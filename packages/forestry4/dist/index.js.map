{"version":3,"file":"index.js","sources":["../../../node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../../../node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../node_modules/rxjs/node_modules/tslib/tslib.es6.mjs","../../../node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../../../node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../../../node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../../../node_modules/rxjs/dist/esm5/internal/Subscription.js","../../../node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../../../node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../../../node_modules/rxjs/dist/esm5/internal/util/noop.js","../../../node_modules/rxjs/dist/esm5/internal/Subscriber.js","../../../node_modules/rxjs/dist/esm5/internal/util/identity.js","../../../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../src/lib/asError.ts","../src/typeguards.ts","../src/Stores/helpers.ts","../src/lib/path.ts","../src/lib/combinePaths.ts","../src/lib/bindActions.ts","../src/Stores/Store.ts","../src/Stores/Forest.ts"],"sourcesContent":["export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","export default function asError(value: unknown) {\n  if (value instanceof Error) {\n    return value;\n  }\n  if (!value) {\n    return new Error('(unknown error in Forestry (maybe a validation $test?)');\n  }\n  if (typeof value === 'string') {\n    return new Error(value);\n  }\n  return new Error('unknown / bad error in Forestry');\n}\n","import type { StoreIF } from './types';\n\nexport type ZodParser = {\n  parse: (a: unknown) => unknown;\n};\n\nexport function isObj(maybe: unknown): maybe is Record<string, unknown> {\n  return typeof maybe === 'object' && maybe !== null;\n}\n\nexport function isZodParser(maybe: unknown): maybe is ZodParser {\n  return isObj(maybe) && typeof (maybe as any).parse === 'function';\n}\n\nexport function isStore(maybe: unknown): maybe is StoreIF<unknown> {\n  return (\n    isObj(maybe) &&\n    'value' in maybe &&\n    typeof (maybe as any).next === 'function' &&\n    typeof (maybe as any).subscribe === 'function'\n  );\n}\n","import { ValueTestFn } from '../types';\nimport { Store } from './Store';\n\nexport function testize<DataType>(\n  testFunctions: ValueTestFn<DataType> | ValueTestFn<DataType>[],\n  self: Store<DataType>,\n): ValueTestFn<DataType> | ValueTestFn<DataType>[] {\n  if (Array.isArray(testFunctions)) {\n    return testFunctions.map(\n      (fn) =>\n        function (value: unknown) {\n          return fn.call(self, value, self);\n        },\n    );\n  } else {\n    return function (value: unknown) {\n      return testFunctions.call(self, value, self);\n    };\n  }\n}\n","import { Path } from '../types';\nimport { type, TypeEnum } from '@wonderlandlabs/walrus';\n\n/**\n * Helper function to get nested values from complex structures.\n * Uses Walrus type methods to identify the variation of each node.\n * Supports objects, arrays, Maps, and other complex structures.\n */\nexport function getPath(source: any, pathArray: Path): unknown {\n  if (!Array.isArray(pathArray)) {\n    return getPath(source, pathArray.split('.'));\n  }\n  // Navigate through all $path elements using reduce\n  const result = pathArray.reduce((current, pathSegment) => {\n    if (current === undefined || current === null) {\n      return undefined;\n    }\n\n    const currentType = type.describe(current, true);\n\n    switch (currentType) {\n      case TypeEnum.map:\n        return current.get(pathSegment);\n\n      case TypeEnum.array: {\n        if (typeof pathSegment === 'number') {\n          return current[pathSegment];\n        }\n        const index = parseInt(pathSegment, 10);\n        if (isNaN(index)) {\n          return undefined;\n        }\n        return current[index];\n      }\n      case TypeEnum.object:\n        return current[pathSegment];\n\n      default:\n        return undefined;\n    }\n  }, source);\n\n  return result;\n}\n\n/**\n * Helper function to set nested values in Immer drafts.\n * Uses Walrus type methods to identify the variation of each node.\n * Supports objects, arrays, Maps, and other complex structures.\n */\nexport function setPath(draft: any, path: Path, value: unknown): void {\n  // Navigate through all but the last element using reduce\n  if (!Array.isArray(path)) {\n    return setPath(draft, path.split('.'), value);\n  }\n  const [target] = path.slice(0, path.length - 1).reduce(\n    ([current], pathSegment) => {\n      const currentType = type.describe(current, true);\n\n      switch (currentType) {\n        case TypeEnum.map:\n          if (!current.has(pathSegment)) {\n            current.set(pathSegment, {});\n          }\n          return [current.get(pathSegment)];\n\n        case TypeEnum.array: {\n          if (typeof pathSegment === 'number') {\n            return current[pathSegment];\n          }\n          const index = parseInt(pathSegment, 10);\n          if (isNaN(index)) {\n            throw new Error(`Invalid array index: ${pathSegment}`);\n          }\n          if (current[index] === undefined) {\n            current[index] = {};\n          }\n          return [current[index]];\n        }\n        case TypeEnum.object:\n          if (\n            current[pathSegment] === undefined ||\n            current[pathSegment] === null\n          ) {\n            current[pathSegment] = {};\n          }\n          return [current[pathSegment]];\n\n        default:\n          throw new Error(`Cannot set nested value on type: ${currentType}`);\n      }\n    },\n    [draft],\n  );\n\n  // Final assignment based on target type\n  const finalKey = path[path.length - 1];\n  const finalType = type.describe(target, true);\n\n  switch (finalType) {\n    case TypeEnum.map:\n      target.set(finalKey, value);\n      break;\n\n    case TypeEnum.array:\n      if (typeof finalKey === 'number') {\n        target[finalKey] = value;\n      } else {\n        const index = parseInt(finalKey, 10);\n        if (isNaN(index)) {\n          throw new Error(`Invalid array index: ${finalKey}`);\n        }\n        target[index] = value;\n      }\n      break;\n\n    case TypeEnum.object:\n      target[finalKey] = value;\n      break;\n\n    default:\n      throw new Error(`Cannot set value on type: ${finalType}`);\n  }\n}\n","import { Path } from '../types';\n\nfunction toPathArray(p) {\n  if (Array.isArray(p)) {\n    return p;\n  }\n  if (typeof p === 'string') {\n    return p.split('.');\n  }\n  if (p instanceof RegExp) {\n    return [p];\n  }\n  console.log('unparsable $path: ', p);\n  throw new Error('cannot parse $path');\n}\n\nexport function pathString(path: Path): string {\n  return Array.isArray(path) ? path.join('.') : `${path}`;\n}\n\nexport default function combinePaths(p: Path, p2: Path) {\n  if (!Array.isArray(p)) {\n    return combinePaths(toPathArray(p), p2);\n  }\n\n  if (!Array.isArray(p2)) {\n    return combinePaths(p, toPathArray(p2));\n  }\n\n  if (!p.length) {\n    return p2;\n  }\n  if (!p2.length) {\n    return p;\n  }\n  return [...p, ...p2];\n}\n","const exclude = 'next,isActive,value,complete'.split(',');\nexport type FnRecord = Record<string, () => void>;\n\nfunction getAllMethodNames(obj: any): string[] {\n  const methods = new Set<string>();\n\n  // Walk up the prototype chain\n  let current = obj;\n  while (current && current !== Object.prototype) {\n    // Get all property names (including non-enumerable)\n    Object.getOwnPropertyNames(current).forEach(name => {\n      // Skip constructor and properties that might cause circular references\n      if (name === 'constructor' || /^\\$/.test(name)) return;\n\n      // Check if it's a function by looking at the property descriptor\n      const descriptor = Object.getOwnPropertyDescriptor(current, name);\n      if (descriptor && typeof descriptor.value === 'function') {\n        methods.add(name);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return Array.from(methods);\n}\n\nexport default function bindActions(target: FnRecord) {\n  const methodNames = getAllMethodNames(target);\n\n  return methodNames.reduce(($: FnRecord, key: string) => {\n    if (/^\\$/.test(key) || exclude.includes(key) || typeof target[key] !== 'function') {\n      return $;\n    }\n\n    $[key] = (...args: unknown[]) => target[key](...args);\n    return $;\n  }, {});\n}\n","import {\n  Listener,\n  Path,\n  PendingValue,\n  StoreIF,\n  StoreParams,\n  TransFn,\n  TransParams,\n  ValueTestFn,\n} from '../types';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { isEqual } from 'lodash-es';\nimport asError from '../lib/asError';\nimport { isZodParser, ZodParser } from '../typeguards';\nimport { enableMapSet, produce } from 'immer';\nimport { testize } from './helpers';\nimport { getPath, setPath } from '../lib/path';\nimport { pathString } from '../lib/combinePaths';\nimport bindActions, { FnRecord } from '../lib/bindActions';\n\n// Enable Immer support for Map and Set\nenableMapSet();\n\n/**\n * @internal Base implementation class - not intended for direct use\n */\nexport class Store<DataType> implements StoreIF<DataType> {\n  constructor(p: StoreParams<DataType>, noSubject = false) {\n    // Apply prep function to initial value if it exists\n    if (!noSubject) {\n      this.#subject = new BehaviorSubject(p.value);\n    }\n\n    if (p.schema) {\n      this.$schema = p.schema;\n    }\n\n    this.debug = !!p.debug;\n\n    this.#tests = p.tests ? testize<DataType>(p.tests, this) : undefined;\n    if (p.prep) {\n      this.#prep = p.prep.bind(this);\n      if (this.#subject) {\n        this.#subject.next(this.prep(this.value!));\n      }\n    }\n\n    if (p.name && typeof p.name === 'string') {\n      this.#name = p.name;\n    }\n    if (p.res && p.res instanceof Map) {\n      p.res.forEach((value, key) => this.$res.set(key, value));\n    }\n  }\n\n  /**\n   * note - for consistency with the types $subject is a generic $subject;\n   * however internally it is a BehaviorSubject.\n   * @private\n   */\n  #subject?: BehaviorSubject<DataType>;\n  get $subject(): Observable<DataType> {\n    return this.#subject!;\n  }\n\n  public debug: boolean; // more alerts on validation failures;\n  #prep?: (input: Partial<DataType>, current: DataType) => DataType;\n\n  prep(value: Partial<DataType>) {\n    if (this.#prep) {\n      return this.#prep.call(this, value, this.value);\n    }\n    return value as DataType;\n  }\n\n  public $res: Map<string, any> = new Map();\n\n  #name?: string;\n  get $name(): string {\n    if (!this.#name) {\n      this.#name = 'forestry-store:' + `${Math.random()}`.split('.').pop();\n    }\n    return this.#name!;\n  }\n\n  complete(): DataType {\n    if (!this.isActive) {\n      return this.value!;\n    }\n\n    const finalValue = this.value;\n    this.isActive = false;\n\n    // Complete the RxJS $subject\n    if (this.#subject) {\n      this.#subject.complete();\n    }\n\n    return finalValue;\n  }\n\n  isActive: boolean = true;\n\n  next(value: Partial<DataType>): void {\n    if (!this.isActive) {\n      throw new Error('Cannot update completed store');\n    }\n    if (!this.#subject) {\n      throw new Error('Store requires $subject -- or override of next()');\n    }\n\n    const preparedValue = this.prep(value);\n    const { isValid, error } = this.$validate(preparedValue);\n    if (isValid) {\n      if (this.#hasTrans()) {\n        this.queuePendingValue(preparedValue);\n      } else {\n        this.#subject!.next(preparedValue);\n      }\n      return;\n    }\n    if (this.debug) {\n      this.$broadcast({ action: 'next-error', error, value: preparedValue });\n    }\n    throw asError(error);\n  }\n\n  #test(fn: ValueTestFn<DataType>, value: unknown) {\n    const result = fn.call(this, value, this);\n    if (result) {\n      throw asError(result);\n    }\n    // no result/output for valid elements\n  }\n\n  public get suspendValidation() {\n    return this.#transStack.value.some((p) => p.suspendValidation);\n  }\n\n  $transact(params: TransParams | TransFn, suspend?: boolean) {\n    if (typeof params === 'function') {\n      this.$transact({\n        action: params,\n        suspendValidation: !!suspend,\n      });\n      return;\n    }\n    const { action, suspendValidation } = params;\n    let transId: string = '';\n    try {\n      transId = this.#queuePendingTrans(suspendValidation);\n      const self = this;\n\n      function boundFn(value: DataType) {\n        return action.call(self, value);\n      }\n\n      boundFn(this.value!);\n      this.#commitTransact(transId);\n    } catch (err) {\n      if (transId) {\n        this.#revertTransact(transId);\n      }\n      throw err;\n    }\n  }\n\n  readonly #transStack: BehaviorSubject<PendingValue<DataType>[]> =\n    new BehaviorSubject<PendingValue<DataType>[]>([]);\n\n  // for debugging\n  observeTransStack(listener: Listener<PendingValue<DataType>[]>) {\n    return this.#transStack.subscribe(listener);\n  }\n\n  #commitTransact(id: string) {\n    let changed = false;\n    const nextStack = this.#transStack.value.map((p) => {\n      if (p.id === id) {\n        changed = true;\n        return {\n          ...p,\n          isTransaction: false,\n          suspendValidation: false,\n        };\n      } else {\n        return p;\n      }\n    });\n    if (changed) {\n      this.#transStack.next(nextStack);\n    }\n    this.#checkTransComplete();\n  }\n\n  #checkTransComplete() {\n    if (!this.#transStack.value.some((p) => p.isTransaction)) {\n      const last = this.#transStack.value.pop();\n      this.#transStack.next([]);\n      if (last) {\n        this.$broadcast({\n          action: 'checkTransComplete',\n          phase: 'next',\n          value: last.value,\n        });\n        this.next(last.value);\n      }\n    }\n  }\n\n  _$?: Record<string, (...args: any[]) => unknown>;\n\n  get $() {\n    if (!this._$) {\n      this._$ = bindActions(this as unknown as FnRecord);\n    }\n    return this._$;\n  }\n\n  queuePendingValue(value: DataType): string {\n    const digits = `${Math.random()}`.replace('0.', '');\n    const id = `level_${this.#transStack.value.length}-${digits}-trans`;\n\n    const next = [\n      ...this.#transStack.value,\n      {\n        id,\n        value,\n        isTransaction: false,\n      },\n    ];\n    this.#transStack.next(next);\n    return id;\n  }\n\n  #hasTrans() {\n    return this.#transStack.value.some((p) => p.isTransaction);\n  }\n\n  #collapseTransStack = () => {\n    if (this.#hasTrans()) {\n      return;\n    }\n\n    const last = this.#transStack.value.pop();\n    this.#transStack.next([]);\n    return last;\n  };\n\n  dequeuePendingValue(id: string): PendingValue<DataType> | undefined {\n    const queuedIndex = this.#transStack.value.findIndex((p) => p.id === id);\n    if (queuedIndex === this.#transStack.value.length - 1) {\n      if (!this.#transStack.value.some((p) => p.isTransaction)) {\n        return this.#collapseTransStack();\n      }\n    }\n  }\n\n  #queuePendingTrans(suspendValidation = false): string {\n    const digits = `${Math.random()}`.replace('0.', '');\n    const id = `level_${this.#transStack.value.length}-${digits}-trans`;\n    const next = [\n      ...this.#transStack.value,\n      {\n        id,\n        value: this.value,\n        suspendValidation,\n        isTransaction: true,\n      },\n    ];\n    this.#transStack.next(next);\n    return id;\n  }\n\n  #revertTransact(id: string) {\n    const index = this.#transStack.value.findIndex((p) => p.id === id);\n    if (index >= 0) {\n      const next = this.#transStack.value.slice(0, index);\n      this.#transStack.next(next);\n    }\n  }\n\n  get $root() {\n    return this;\n  }\n\n  get $isRoot() {\n    return true;\n  }\n\n  $parent: undefined;\n\n  public $broadcast(message: unknown, fromRoot?: boolean) {\n    if (fromRoot || !this.$parent) {\n      this.receiver.next(message);\n    }\n    if (this.$root && this.$root !== this) {\n      this.$root.$broadcast(message);\n    }\n  }\n\n  public receiver = new Subject();\n\n  // $validate determines if a value can be sent to next\n  // _in the current context_\n  // -- i.e., depending on on transactional conditions\n  $validate(value: DataType) {\n    if (this.suspendValidation) {\n      return { isValid: true };\n    }\n    if (isZodParser(this.$schema)) {\n      try {\n        this.$schema.parse(value); // throws an error if the value is not valid\n      } catch (err) {\n        return {\n          isValid: false,\n          error: asError(err),\n          source: '$schema',\n        };\n      }\n    }\n\n    return this.$test(value);\n  }\n\n  $isValid(value: DataType): boolean {\n    return this.$validate(value).isValid;\n  }\n\n  $schema?: ZodParser;\n\n  #tests?: ValueTestFn<DataType> | ValueTestFn<DataType>[];\n\n  $test(value: DataType) {\n    let lastFn;\n    if (this.#tests) {\n      try {\n        if (Array.isArray(this.#tests)) {\n          for (const test of this.#tests) {\n            lastFn = test;\n            this.#test(test, value);\n          }\n        } else if (typeof this.#tests === 'function') {\n          lastFn = this.#tests;\n          this.#test(this.#tests, value);\n        }\n      } catch (err) {\n        return {\n          isValid: false,\n          value,\n          error: asError(err),\n          testFn: lastFn,\n        };\n      }\n    }\n    return {\n      isValid: true,\n    };\n  }\n\n  get value() {\n    const tsv = this.#transStack.value;\n    if (tsv.length) {\n      return tsv[tsv.length - 1].value;\n    }\n    if (!this.#subject) {\n      throw new Error('Store requires $subject or overload of value');\n    }\n    return this.#subject.value as DataType;\n  }\n\n  subscribe(listener: Listener<DataType>): Subscription {\n    return this.$subject!.pipe(distinctUntilChanged(isEqual)).subscribe(\n      listener,\n    );\n  }\n\n  get(path?: Path): any {\n    if (!path || (Array.isArray(path) && path.length === 0)) {\n      return this.value;\n    }\n    const pathArray = Array.isArray(path) ? path : pathString(path).split('.');\n    return getPath(this.value, pathArray);\n  }\n\n  set(path: Path, value: unknown) {\n    const next = produce(this.value, (draft) => {\n      setPath(draft, path, value);\n    });\n    this.next(next);\n  }\n\n  mutate(producerFn: (draft: any) => void, path?: Path): any {\n    if (!path || (Array.isArray(path) && path.length === 0)) {\n      // Mutate the entire state\n      const newValue = produce(this.value, producerFn);\n      this.next(newValue);\n      return this.value;\n    } else {\n      // Mutate a specific $path within the state\n      const pathArray = Array.isArray(path)\n        ? path\n        : pathString(path).split('.');\n      const newValue = produce(this.value, (draft) => {\n        // Get the target object at the specified $path\n        const target = getPath(draft, pathArray);\n        if (target !== undefined) {\n          // Apply the producer function to the target\n          producerFn(target);\n        }\n      });\n      this.next(newValue);\n      return this.value;\n    }\n  }\n}\n","import { Store } from './Store';\nimport { ForestMessage, Listener, Path, StoreIF, StoreParams } from '../types';\nimport { map, Subject, Subscription } from 'rxjs';\nimport combinePaths, { pathString } from '../lib/combinePaths';\nimport { produce } from 'immer';\nimport { getPath, setPath } from '../lib/path';\nimport asError from '../lib/asError';\nimport { isStore } from '../typeguards';\nimport { get, isEqual } from 'lodash-es';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nexport class Forest<DataType>\n  extends Store<DataType>\n  implements StoreIF<DataType>\n{\n  #parentSub?: Subscription;\n\n  constructor(p: StoreParams<DataType>) {\n    const { path, parent } = p;\n    // Determine if this is a branch (has both path and parent) or root\n    const isBranch = path !== undefined && parent !== undefined;\n\n    if (isBranch) {\n      // Handle branch construction\n      if (!isStore(parent)) {\n        throw new Error('Forest branches must have parents');\n      }\n\n      const branchValue = getPath(parent?.value, path) as DataType;\n      super(\n        {\n          ...p,\n          value: branchValue,\n        },\n        true, // noSubject = true for branches (they use parent's subject)\n      );\n      this.$path = path;\n      this.$parent = parent;\n      // Subscribe to parent messages\n      this.#parentSub = parent.receiver.subscribe((message) => {\n        this.handleMessage(message);\n      });\n    } else {\n      // Handle root construction - no subject needed for branches\n      super(p); // noSubject = false for roots (they need their own subject)\n    }\n  }\n\n  readonly $path?: Path = [];\n  readonly $parent?: StoreIF<unknown>;\n\n  get $isRoot() {\n    return !this.$parent;\n  }\n\n  // Get the full path from root to this branch\n  get fullPath(): Path {\n    if (this.$isRoot) {\n      return [];\n    }\n    if (!this.$parent || !this.$path) {\n      throw new Error('Branch requires parent and path');\n    }\n\n    // Recursively build the full path by combining parent's fullPath with our relative path\n    const parentFullPath = (this.$parent as Forest<unknown>).fullPath;\n    return combinePaths(parentFullPath, this.$path);\n  }\n\n  // Override value getter for branches to get value from root using fullPath\n  get value(): DataType {\n    if (this.$isRoot) {\n      // Root: use parent Store implementation\n      return super.value;\n    } else {\n      // Branch: get value from root at our full path\n      return getPath(this.$root.value, this.fullPath) as DataType;\n    }\n  }\n\n  get $root(): StoreIF<unknown> | undefined {\n    if (this.$isRoot) {\n      return this;\n    }\n    return this.$parent?.$root;\n  }\n\n  // Override complete to handle forest-wide completion\n  complete(): DataType {\n    if (!this.isActive) {\n      return this.value;\n    }\n\n    // Clean up branch subscription if this is a branch\n    if (this.#parentSub) {\n      this.#parentSub.unsubscribe();\n    }\n\n    // If this is root, send completion message to all branches\n    if (this.$isRoot) {\n      const completionMessage: ForestMessage = {\n        type: 'complete',\n        timestamp: Date.now(),\n      };\n      this.$broadcast(completionMessage, true);\n\n      // Complete the receiver subject\n      this.receiver.complete();\n    }\n\n    // Call parent complete method\n    return super.complete();\n  }\n\n  // Override next to implement validation messaging system\n  next(value: Partial<DataType>) {\n    if (!this.isActive) {\n      throw new Error('Cannot update completed store');\n    }\n\n    // Apply prep function if it exists to transform partial input to complete data\n    const preparedValue = this.prep\n      ? this.prep(value, this.value!)\n      : (value as DataType);\n\n    // First validate using Store's validation\n    const { isValid, error } = this.$validate(preparedValue);\n    if (!isValid) {\n      if (this.debug) {\n        console.error(\n          `cannot update ${this.$name} with `,\n          preparedValue,\n          error,\n        );\n      }\n      throw asError(error);\n    }\n\n    // Handle branch vs root behavior\n    if (this.$parent && this.$path) {\n      // Branch: update parent at our path\n      this.$parent.set(this.$path, preparedValue);\n    } else {\n      // Root: use pending validation system\n      const pendingId = this.queuePendingValue(preparedValue);\n\n      try {\n        this.#validatePending(preparedValue);\n        const pending = this.dequeuePendingValue(pendingId);\n        if (pending) {\n          super.next(preparedValue);\n        }\n      } catch (error) {\n        this.dequeuePendingValue(pendingId);\n        throw error;\n      }\n    }\n  }\n\n  #validatePending(preparedValue: DataType) {\n    // Step 1: Create transient listener for validation failures\n    let validationError: string | null = null;\n    const transientSub = this.receiver.subscribe((message: any) => {\n      if (message && message.type === 'validation-failure') {\n        validationError = `Branch ${pathString(message.branchPath)}: ${message.error}`;\n      }\n    });\n\n    try {\n      // Step 2: Send setPending message to all branches\n      const setPendingMessage: ForestMessage = {\n        type: 'set-pending',\n        payload: preparedValue,\n        timestamp: Date.now(),\n      };\n      this.$broadcast(setPendingMessage, true);\n\n      const validateMessage: ForestMessage = {\n        type: '$validate-all',\n        timestamp: Date.now(),\n      };\n      this.$broadcast(validateMessage, true);\n      if (validationError) {\n        if (this.debug) {\n          console.error('Branch validation failed:', validationError);\n        }\n        throw new Error(`Validation failed: ${validationError}`);\n      }\n    } finally {\n      transientSub.unsubscribe();\n    }\n  }\n\n  set(path: Path, value: unknown): boolean {\n    const pathArray = Array.isArray(path) ? path : pathString(path).split('.');\n    const newValue = produce(this.value, (draft) => {\n      // Use Immer to safely set nested values\n      setPath(draft, pathArray, value);\n    });\n    return this.next(newValue);\n  }\n\n  $branch<Type, Subclass extends StoreIF<Type> = StoreIF<Type>>(\n    path: Path,\n    params: StoreParams<Type, Subclass>,\n  ): Subclass {\n    const name = this.$name + '.' + pathString(path);\n    if (params.subclass) {\n      return new params.subclass({\n        name,\n        ...params,\n        path,\n        parent: this,\n      });\n    }\n    return new Forest<Type>({\n      name,\n      ...params,\n      parent: this,\n      path,\n    }) as unknown as Subclass;\n  }\n\n  // Branch-specific methods (from ForestBranch)\n\n  // Handle messages from parent/root\n  private handleMessage(message: ForestMessage) {\n    if (message.type === 'complete') {\n      this.complete();\n    } else if (message.type === 'set-pending') {\n      // Update our value if the parent changed our path\n      if (this.$parent && this.$path) {\n        const newValue = getPath(this.$parent.value, this.$path) as DataType;\n        if (!isEqual(newValue, this.value)) {\n          super.next(newValue);\n        }\n      }\n    }\n  }\n\n  get $subject() {\n    if (this.$isRoot) {\n      return super.$subject;\n    }\n    const path = pathString(this.fullPath);\n    return this.$root.$subject.pipe(\n      map((value) => (path ? get(value, path) : value) as DataType),\n      distinctUntilChanged(isEqual),\n    );\n  }\n\n  subscribe(listener: Listener<DataType>) {\n    return this.$subject.subscribe(listener);\n  }\n\n  public receiver = new Subject();\n\n  public $broadcast(message: unknown, fromRoot?: boolean) {\n    if (fromRoot || this.$isRoot) {\n      this.receiver.next(message);\n    } else if (this.$root && this.$root !== this) {\n      this.$root.$broadcast(message);\n    } else {\n      console.warn(\n        'strange $broadcast pattern; node that is not $root has no $parent',\n        this,\n      );\n    }\n  }\n}\n"],"names":["d","b","Subscription","Subscriber","ConsumerObserver","SafeSubscriber","OperatorSubscriber","err","error"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}